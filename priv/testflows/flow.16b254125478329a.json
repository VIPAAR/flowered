[
    {
        "id": "16b254125478329a",
        "type": "tab",
        "label": "[catch] don't catch if the node isn't selected",
        "disabled": false,
        "info": "This presents an annoying edgecase.\n\nA catch node can have a list of nodes from which it accepts exceptions. If a node (in this case the file in node) generates an exception, in Erlang-RED that exception is dealt with if there is a active catch node in the flow.\n\nSo the file in believes the exception has been handled and its done.\n\nBut the catch node does handle exceptions from the file in node, so it ignores the exception.\n\nThe result is that the exception disappears.\n\nWhat Node-RED does is have the file in node then produce an debug message because the exception wasn't handled.\n\nCurrently this does not happen in Erlang-RED because of the way Erlang-RED deals with exceptions.\n\n# Possible solution\n\nHave debug nodes send exceptions back to the source node if they didn't handle them?\n\nBut this doesn't work if there are two catch nodes and one does handle the exception and the other doesn't.",
        "env": [
            {
                "name": "ERED_PENDING",
                "value": "true",
                "type": "bool"
            }
        ]
    },
    {
        "id": "82f3f6b3ff681682",
        "type": "catch",
        "z": "16b254125478329a",
        "name": "",
        "scope": [
            "c54c1c52fe116e87",
            "c970c0e90333caef",
            "7f9910646b55a92f"
        ],
        "uncaught": false,
        "x": 408,
        "y": 486,
        "wires": [
            [
                "c54c1c52fe116e87",
                "a3e89a14b26e7684"
            ]
        ]
    },
    {
        "id": "c54c1c52fe116e87",
        "type": "debug",
        "z": "16b254125478329a",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 627,
        "y": 291,
        "wires": []
    },
    {
        "id": "c970c0e90333caef",
        "type": "inject",
        "z": "16b254125478329a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 171,
        "y": 373,
        "wires": [
            [
                "06c87a703facf99b"
            ]
        ]
    },
    {
        "id": "06c87a703facf99b",
        "type": "file in",
        "z": "16b254125478329a",
        "name": "",
        "filename": "dfsafsdf",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 415,
        "y": 629,
        "wires": [
            []
        ]
    },
    {
        "id": "a3e89a14b26e7684",
        "type": "ut-assert-failure",
        "z": "16b254125478329a",
        "name": "",
        "x": 732,
        "y": 424.5,
        "wires": []
    },
    {
        "id": "e192e68e59d47ac0",
        "type": "ut-assert-debug",
        "z": "16b254125478329a",
        "name": "",
        "nodeid": "c54c1c52fe116e87",
        "msgtype": "normal",
        "inverse": false,
        "x": 664,
        "y": 227.5,
        "wires": []
    }
]